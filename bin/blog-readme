#!/usr/bin/env perl

use strict;
use warnings;
use v5.10.0;

use FindBin qw/$Bin/;
use lib "$Bin/../lib/perl5";
use open OUT=>':locale';
use POSIX ();
use Blog::Base::Quiq::Option;
use Blog::Base::R1::Help;
use Blog::Base::Quiq::ApplicationPaths;
use Blog::Base::Quiq::Config;
use Blog::Base::Quiq::Process;
use Blog::Base::Quiq::Path;
use Sdoc1::Document;

# -----------------------------------------------------------------------------

=encoding utf8

=head1 NAME

blog-readme - Generiere README.pod für GitHub-Repository

=head1 USAGE

blog-readme [OPTIONS]

=head1 OPTIONS

=over 4

=item --format=FORMAT (Default: 'pod')

Format der generierten Datei: 'pod', 'sdoc' oder 'html'.

=item --help

Diese Hilfe.

=back

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=cut

# -----------------------------------------------------------------------------

# Optionen

my $format = 'pod';
my $help = 0;

Blog::Base::Quiq::Option->extract(\@ARGV,
    -format=>\$format,
    -help=>\$help,
);
if ($help) {
    Blog::Base::R1::Help->exit;
}
elsif (@ARGV) {
    Blog::Base::R1::Help->exit(10,'ERROR: Too many arguments');
}

# Konfiguration

my $app = Blog::Base::Quiq::ApplicationPaths->new;
my $cfg = Blog::Base::Quiq::Config->new($app->etcDir('blog.conf'));

my $articleDir = $app->homeDir('article');

# Ins Artikelverzeichnis wechseln
Blog::Base::Quiq::Process->cwd($articleDir);

# Artikeldateien zusammenfügen

my $code = <<'__EOT__';
= NAME

Blog - Blog Articles

= DESCRIPTION

Die Quellen der Artikel des Blog  U{http://fseitz.de/blog}

__EOT__

my $fmt1 = 'https://github.com/s31tz/Blog/blob/master/article/%s';
my $fmt2 = 'http://fseitz.de/blog/index.php?/archives/%d-x.html';

for my $file (reverse Blog::Base::Quiq::Path->glob("*.sdoc")) {
    my $text = Encode::decode('utf-8',Blog::Base::Quiq::Path->read($file));

    # Drafts übergehen wir

    if ($text =~ /^# (?:Draft: )(.+)/m) {
        if ($1 eq 'yes') {
            next;
        }
    }

    # Titel des Artikels bestimmen
    my ($title) = $text =~ /title="(.*?)"/;

    # Serendipity-Id des Artikels
    my ($id) = $text =~ /^# (?:id=|Id: )(\d+)/m;

    $code .= sprintf qq|* U{"$fmt1",text="%s"} (U{"$fmt2",text="Article"})\n\n|,
        $file,$title,$id;
    # $code .= sprintf qq|* U{"$fmt1",text="%s"}\n\n|,$file,$title;
}

my $year = POSIX::strftime('%Y',localtime);

$code .= sprintf <<'__EOT__',(localtime)[5]+1900;
= AUTHOR

Frank Seitz, U{http://fseitz.de}

= COPYRIGHT

Copyright (C) %s Frank Seitz

# eof
__EOT__
    
binmode STDOUT,':encoding(utf8)';
print $format eq 'sdoc'? $code:
    Sdoc1::Document->new(\$code,-utf8=>1)->dump($format);

# eof
