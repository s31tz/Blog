package Blog::Base::String1;
use base qw/Blog::Base::Object/;

# Generated by CoTeDo - DO NOT EDIT!

use strict;
use warnings;

# -----------------------------------------------------------------------------

=encoding utf8

=head1 NAME

Blog::Base::String1 - Operationen auf Zeichenketten

=head1 BASE CLASS

L<Blog::Base::Object>

=head1 METHODS

=head2 extractKeyVal() - Liefere Schüssel/Wert-Paare

=head3 Synopsis

    $arr|@arr = $class->extractKeyVal($str);

=head3 Description

Liefere die in der Zeichenkette enthaltenen Schlüssel/Wert-Paare.

Die Schlüssel/Wert-Paare haben die Form:

    KEY="VAL"

Wenn VAL kein Whitespace enthält, können die Anführungsstriche
weggelassen werden:

    KEY=VAL

=head3 Example

    q| var1=val1 var2="val2a val2b" var3=val3 var4="val4" |;
    ==>
    ('var1','val1','var2','val2a val2b','var3','val3','var4','val4')

=head3 Caveats

Wenn VAL mit einem doppelten Anführungsstrich beginnt, darf es
keine doppelten Anführungsstiche enthalten.

=cut

# -----------------------------------------------------------------------------

sub extractKeyVal {
    my ($class,$str) = @_;

    my @arr;
    while ($str =~ s/^\s*(\w+)=//) {
        push @arr,$1;
        $str =~ s/^"([^"]*)"// || $str =~ s/^\{([^}]*)\}// ||
            $str =~ s/^(\S*)//;
        push @arr,$1;
    }

    return wantarray? @arr: bless \@arr,'Blog::Base::Array';
}

# -----------------------------------------------------------------------------

=head2 extractMailAddresses() - Liefere die in der Zeichenkette enthaltenen Email-Adressen

=head3 Synopsis

    @arr = $class->extractMailAddresses($str);

=head3 Description

Ermittele Mailadressen der Art user@host.domain in $str und liefere
ein Array mit diesen Adressen zurück.

=head3 Example

=over 2

=item *

Zwei Adressen:

    "To: lieschen Mueller <lieschen.mueller@irgendwo.de>,
        Ernst Mustermann <ernst@mustermann.de>"
    -->
    lieschen.mueller@irgendwo.de
    ernst@mustermann.de

=back

=cut

# -----------------------------------------------------------------------------

sub extractMailAddresses {
    my ($class,$str) = @_;

    # FIXME: Pattern verbessern
    my @arr = $str =~ m|([-\w.]+\@[-\w.]+(?:\.[-\w.]+)+)|g;

    return wantarray? @arr: bless \@arr,'Blog::Base::Array';
}

# -----------------------------------------------------------------------------

=head1 AUTHOR

Frank Seitz, L<http://fseitz.de/>

=head1 COPYRIGHT

Copyright (C) 2015 Frank Seitz

=cut

# -----------------------------------------------------------------------------

1;

# eof
