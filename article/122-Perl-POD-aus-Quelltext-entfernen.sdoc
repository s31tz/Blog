# Date: 2015-11-15
# Id: 134
# Draft: no
# Categories: Perl

%Document:
  title="Perl: Dokumentation und Kommentare aus Perl-Quelltexten entfernen"
  generateAnchors=0
  utf8=1

%Figure: file="IMGDIR/perl-130x65.png" \
    width=94 height=47 url="http://www.perl.org/"

Entferne POD-Abschnitte aus Perl-Quelltext:

  %Code: filter="./blog-highlight perl %FORMAT%"
  $src =~ s/^=[a-z].*?^=cut\n*//msg;
  .

Entferne ganzzeilige Kommentare aus Perl-Quelltext:

  %Code: filter="./blog-highlight perl %FORMAT%"
  $src =~ s/^[\t ]*#.*\n+//mg;
  .

Entferne teilzeilige Kommentare aus Perl-Quelltext:

  %Code: filter="./blog-highlight perl %FORMAT%"
  $src =~ s/[\t ]+# .*//g;
  .

Diese Operationen sind nützlich, wenn man einen Perl-Quelltext ohne
Dokumentation und Kommentare ausliefern möchte, oder wenn man
entscheiden möchte, ob eine Quelltextänderung getestet werden muss.
Dies ist der Fall, wenn Änderungen in dem Teil des Quelltextes
existieren, der übrig bleibt, wenn man die Dokumentation und
Kommentare entfernt.

Als teilzeiliger Kommentar wird die Abfolge WHITESPACE-HASH-SPACE-TEXT
akzeptiert. Die Kommentare müssen entsprechend verfasst sein. Dies
hat den Zweck, die Wahrscheinlichkeit von Fehl-Erkennungen zu
minimieren. Siehe folgende Warnung.

Warnung: Ohne ein echtes Parsing gemäß der Grammatik einer Sprache
sind I{absolut sichere} Operationen auf einem Quelltext nicht möglich
- insbesondere bei Perl, das eine sehr facettenreiche Syntax
hat. Obige Pattern können, auch wenn dies unwahrscheinlich ist, den
Inhalt von String-Literalen matchen. Im Einzelfall kann eine
Fehl-Erkennung durch Änderung des Literals - z.B. durch
Einstreuen von Backslashes - ausgeräumt werden.

= Links

* U{"http://perldoc.perl.org/perlpod.html",text="POD Markup"}

# eof
