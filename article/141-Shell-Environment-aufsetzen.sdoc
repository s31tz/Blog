# Date: 2018-03-04
# Id: 153
# Draft: no
# Categories: Linux/Unix, Shell

%Document:
  title="Shell: Umgebung universell nutzbar aufsetzen"
  generateAnchors=0
  utf8=1

%Figure:
  file="IMGDIR/bash-222x51.jpg"
  url="http://www.gnu.org/software/bash/"
  width="130"
  height="30"

Für die Ausführung von Programmen ist es oft notwendig, dass
bestimmte Umgebungsvariablen gesetzt sind. Dies kann allgemeine
Variablen betreffen, wie z.B. den Suchpfad C{PATH} oder
programmspezifische Variablen, wie z.B. C{ORACLE_HOME}. X

Die Frage ist, wie man eine Shell-Umgebung aufsetzt, so dass diese
möglichst universell nutzbar ist, insbesondere, wenn Programme auch
von außerhalb der eigenen interaktiven Sitzung, z.B. via C{cron}
ausgeführt werden sollen.

Die Shell (bash, ksh, sh) führt bei I{jedem} Login die
nutzerspezifische Datei C{.profile} aus. Werden in dieser Datei alle
Environment-Variablen gesetzt (und exportiert), kann die Umgebung
leicht in anderen Kontexten genutzt werden. Die Variablen in einer
rc-Datei (C{.bashrc} oder C{.kshrc}) zu setzen ist verkehrt, da der
Inhalt einer rc-Datei ausschließlich bei I{interaktiven} Sitzungen
ausgeführt wird und daher ausschließlich Definitionen enthalten
sollte, die für eine Benutzerinteraktion mit der Shell relevant sind
(Beispele: Aussehen des Prompt, Aliase, Länge der History, Farben für
ls(1), usw.).

= TTY-Login, SSH Login

Der normale Anwendungsfall. Eine Login-Shell wird gestartet und
im Zuge dessen C{.profile} ausgeführt.

= Ausführung eines Remote-Kommandos per SSH

Das Remote-Kommando ersetzt in diesem Fall die Login-Shell. Wir sorgen
mit C{bash -lc} dafür, dass die Login-Umgebung hergestellt wird:

  $ ssh USER@HOST bash -lc COMMAND

= X11 Terminal Window Login

Hier ist es wichtig, dass beim Öffnen des Terminal eine I{Login}-Shell
ausgeführt wird. Ggf. ist es nötig, hierfür eine Option in den
Einstellungen zu aktivieren. In den Einstellungen des Xfce Terminals
heißt die Option Q{Run command as login shell}, ist per Default
I{dekativert} und sollte aktiviert werden.

= sudo

Bei C{sudo} sorgt die Option C{-i} dafür, dass das Kommando an eine
Login-Shell übergeben wird:

  $ sudo -iu USER COMMAND

= cron, eigene crontab

Wie bei der Ausführung eines Remote-Kommandos per C{ssh} sorgen wir
mit C{bash -lc} dafür, dass die Login-Umgebung vor Ausführung des
Kommandos hergestellt wird.

  * * * * * bash -lc COMMAND

= cron, fremde crontab

Anstelle der C{bash} nutzen wir C{sudo} (wie oben):

  * * * * * sudo -iu USER COMMAND

# eof
